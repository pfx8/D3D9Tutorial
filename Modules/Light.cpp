//*****************************************************************************
//
// ライト処理 [Light.cpp]
//
// Author : LIAO HANCHEN
//
//*****************************************************************************
#include "Light.h"

//*****************************************************************************
//
// コンストラクタ
//
//*****************************************************************************
Light::Light()
{
	m_directionlight = D3DXVECTOR3(1.0f, 0.0f, 0.0f);

	mes = new DebugMessage;
}

//*****************************************************************************
//
// デストラクタ
//
//*****************************************************************************
Light::~Light()
{

}

//*****************************************************************************
//
// Y方向のベクトルにして回転
//
//*****************************************************************************
void Light::RotationY(float angle)
{
	if (m_rot.y > D3DX_PI * 2.0f || m_rot.y < -D3DX_PI * 2.0f)
	{
		m_rot.y = 0;
	}

	// 角度を記録する
	m_rot.y -= angle;

	D3DXMATRIX rotMatrix;
	D3DXMatrixRotationAxis(&rotMatrix, &D3DXVECTOR3(0.0f, 1.0f, 0.0f), angle);		// 回転行列を作る
	D3DXVec3TransformCoord(&m_directionlight, &m_directionlight, &rotMatrix);	// 回転行列で新しい座標を計算する

}

//*****************************************************************************
//
// 
//
//*****************************************************************************
void Light::message(int row)
{
	mes->DrawPosMessage("lightVector", m_directionlight, D3DXVECTOR2(0, float((row + 0) * 18)));
}